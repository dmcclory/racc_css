- rexical, racc
---------------------------------
css selectors.
--------------------------------

clicking along, doing TDD, working on descendant selectors ('a b c')

get to a point like this:

```
  def parse_and_interpret(selector)
    names = selector.split(" ").reverse
    lambda { |e| 
      ancestor_names = e.ancestors.map {|a| a.name }.push e.name
      names.all? { |n| ancestor_names.include? n }
    }
  end
```

the feature is done ... but it's going to be really hard to figure out how to extend it.

id and class selector syntax:
  - 'a.foo'
  - 'a#bar'

could split on / #\./

but that would give us an array, all of the names would be on one level.

and what about a selector like this? .a .b .c 

there'd be a lot of conditionals ... ugh

but! parsers!
